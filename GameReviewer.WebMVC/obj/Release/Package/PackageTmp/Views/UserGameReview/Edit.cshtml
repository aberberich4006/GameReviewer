@model GameReview.Data.UserReviewEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit a Review</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" style="font-family: 'Times New Roman', Times, serif; font-weight: bolder; font-size: large;">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserGameReviewId)

    <div class="form-group">
        @Html.LabelFor(model => model.GameId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="color: black;">
            @Html.DropDownList("GameId", (IEnumerable<SelectListItem>)ViewBag.Game, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GameId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserReview, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserReview, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserReview, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Review, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Review, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "", new { @style = "color: black;" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
